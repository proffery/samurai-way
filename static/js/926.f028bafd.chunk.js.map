{"version":3,"file":"static/js/926.f028bafd.chunk.js","mappings":"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","sources":["components/blocks/BlockHeader.styled.ts","components/blocks/BlockSection.styled.ts","components/blocks/friendsBlock/friend/Friend_Styles.ts","components/blocks/friendsBlock/friend/Friend.tsx","components/blocks/friendsBlock/FriendsBlock_Styles.ts","store/friends/friendsSelectors.ts","components/blocks/friendsBlock/FriendsBlock.tsx","components/common/pagination/Pagination_Styles.ts","components/common/pagination/Pagination.tsx","components/common/toTop/ToTop_Styles.ts","components/common/toTop/ToTop.tsx","components/blocks/usersBlock/user/User_Styles.ts","components/blocks/usersBlock/user/User.tsx","store/users/usersSelectors.ts","components/blocks/usersBlock/UsersBlock_Styles.ts","components/blocks/usersBlock/UsersBlock.tsx","components/layout/pages/users/Users_Styles.ts","components/layout/pages/users/Users.tsx"],"sourcesContent":["import { font } from 'styles/Font'\r\nimport styled from 'styled-components'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nexport const BlockHeader = styled.h2`\r\n    position: relative;\r\n    word-wrap: break-word;\r\n    padding-bottom: min(20px, 2vw);\r\n    width: 100%;\r\n    color: ${theme.color.text.primary};\r\n    ${font({ weight: 700, Fmin: 14, Fmax: 26 })}\r\n    &::before {\r\n        position: absolute;\r\n        content: \"\";\r\n        height: 1px;\r\n        width: 100%;\r\n        left: 0;\r\n        top: 100%;\r\n        background-color: ${theme.color.background.primary};\r\n    }\r\n    @media ${theme.media.mobile} {\r\n        padding-bottom: 20px;\r\n    }\r\n`","import styled from 'styled-components'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nexport const BlockSection = styled.section`\r\n    display: flex;\r\n    border-radius: 10px;\r\n    background-color: ${theme.color.background.block};\r\n    flex-direction: column;\r\n    color: ${theme.color.text.primary_dark};\r\n    padding: min(30px, 2vw);\r\n    height: fit-content;\r\n    gap: min(30px, 2vw);\r\n    box-shadow: ${theme.shadow.block};\r\n`","import { font } from './../../../../styles/Font';\r\nimport { Avatar } from 'components/common/avatar/Avatar';\r\nimport { NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nconst Friend = styled(NavLink)`\r\n    display: flex;\r\n    position: relative;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    height: 100%;\r\n    width: 100%;\r\n    gap: 6px;\r\n    padding: min(15px, 1vw);\r\n    &::after {\r\n        position: absolute;\r\n        content: '';\r\n        width: 100%;\r\n        height: 1px;\r\n        background-color: ${theme.color.background.primary};\r\n        bottom: 0%;\r\n    }\r\n    &:hover {\r\n        outline: 1px solid ${theme.color.background.primary};\r\n        background-color: ${theme.color.background.primary};\r\n        border-radius: 10px;\r\n    }\r\n    @media ${theme.media.mobile} {\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        max-width: 20%;\r\n        min-width: 65px;\r\n    }\r\n`\r\nconst Photo = styled(Avatar)`\r\n    width: 45%;\r\n`\r\nconst Name = styled.span`\r\n    width: 53%;\r\n    text-align: center;\r\n    ${font({ weight: 400, Fmin: 10, Fmax: 14 })}\r\n    color: ${theme.color.text.primary_dark};\r\n    word-wrap: break-word;\r\n    overflow: hidden;\r\n`\r\nexport const S = {\r\n    Friend,\r\n    Photo,\r\n    Name\r\n}","import { UserResponse } from 'api/usersAPI'\r\nimport { Patch } from 'components/app/Router/routeNames'\r\nimport { memo } from 'react'\r\nimport { S } from './Friend_Styles'\r\n\r\ntype Props = {\r\n    friendData: UserResponse\r\n}\r\n\r\nexport const Friend: React.FC<Props> = memo((props) => {\r\n    return <S.Friend to={Patch.Profile + props.friendData.id} >\r\n        <S.Photo avatarURL={props.friendData.photos.small} />\r\n        <S.Name>{props.friendData.name}</S.Name>\r\n    </S.Friend>\r\n})\r\n\r\n","import { BlockSection } from 'components/blocks/BlockSection.styled'\r\nimport { Pagination } from 'components/common/pagination/Pagination'\r\nimport styled from 'styled-components'\r\nimport { font } from 'styles/Font'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nconst FriendsBlock = styled(BlockSection)`\r\n    display: flex;\r\n`\r\nconst FriendsList = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    @media ${theme.media.mobile} {\r\n        flex-direction: row;\r\n    }\r\n`\r\nconst FriendsPagination = styled(Pagination)`\r\n    ${font({ weight: 700, Fmin: 10, Fmax: 13 })}\r\n    height: 1em;\r\n`\r\n\r\nexport const S = {\r\n    FriendsBlock,\r\n    FriendsList,\r\n    FriendsPagination\r\n}","import { UserResponse } from 'api/usersAPI'\r\nimport { AppRootState } from 'store/redux-store'\r\n\r\nexport const selectPossibleFriendsData = (state: AppRootState) => state.friends.possibleFriends\r\nexport const selectPossibleFriends = (state: AppRootState): UserResponse[] => state.friends.possibleFriends.users\r\nexport const selectTotalPossibleFriendsCount = (state: AppRootState): number => state.friends.possibleFriends.totalUsersCount\r\nexport const selectPossibleFriendsOnPage = (state: AppRootState): number => state.friends.possibleFriends.usersOnPage\r\nexport const selectPossibleFriendsCurrentPage = (state: AppRootState): number => state.friends.possibleFriends.currentPage\r\nexport const selectFriendsData = (state: AppRootState) => state.friends.friends\r\nexport const selectFriends = (state: AppRootState): UserResponse[] => state.friends.friends.users\r\nexport const selectFriendsOnPage = (state: AppRootState): number => state.friends.friends.usersOnPage\r\nexport const selectTotalFriendsCount = (state: AppRootState): number => state.friends.friends.totalUsersCount\r\nexport const selectFriendsCurrentPage = (state: AppRootState): number => state.friends.friends.currentPage","import { BlockHeader } from 'components/blocks/BlockHeader.styled'\r\nimport { Friend } from 'components/blocks/friendsBlock/friend/Friend'\r\nimport { Button } from 'components/common/button/Button'\r\nimport { FlexWrapper } from 'components/common/FlexWrapper.styled'\r\nimport { memo, useEffect } from 'react'\r\nimport { S } from './FriendsBlock_Styles'\r\nimport { useActions } from 'utils/customHooks/useActions'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFriendsData, selectPossibleFriendsData } from 'store/friends/friendsSelectors'\r\nimport { selectAppIsLoading } from 'store/app/appSelectors'\r\n\r\ntype Props = {\r\n    className?: string\r\n    isFriends?: boolean\r\n    headerName: string\r\n}\r\n\r\nexport const FriendsBlock: React.FC<Props> = memo(({ headerName: blockHeaderName, className, isFriends = true }) => {\r\n    const { getFriends } = useActions()\r\n    const { totalUsersCount, currentPage, usersOnPage, users } = useSelector(isFriends ? selectFriendsData : selectPossibleFriendsData)\r\n    const isLoading = useSelector(selectAppIsLoading)\r\n    const pagesCount = Math.ceil(totalUsersCount / usersOnPage)\r\n    const randomPage = getRandomPage(1, pagesCount)\r\n\r\n    useEffect(() => {\r\n        getFriends(randomPage, usersOnPage, isFriends)\r\n    }, [])\r\n\r\n    function getRandomPage(min: number, max: number) {\r\n        const minCeiled = Math.ceil(min)\r\n        const maxFloored = Math.floor(max)\r\n        return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled)\r\n    }\r\n    const randomizeFriends = () => {\r\n        getFriends(randomPage, usersOnPage, isFriends)\r\n    }\r\n    const pageChangeHandler = (pageNumber: number) => {\r\n        getFriends(pageNumber, usersOnPage, isFriends)\r\n    }\r\n\r\n    return <S.FriendsBlock\r\n        id={blockHeaderName.toLowerCase().replaceAll(' ', '-')}\r\n        className={className}\r\n    >\r\n        <FlexWrapper justify={'space-between'}>\r\n            <Button\r\n                onClick={randomizeFriends}\r\n                variant={'link'}\r\n                ariaLabel={'Randomize button'}\r\n            >\r\n                <BlockHeader>\r\n                    {blockHeaderName}\r\n                </BlockHeader>\r\n            </Button>\r\n        </FlexWrapper>\r\n        <S.FriendsList>\r\n            {users.map(friend => <Friend key={friend.id} friendData={friend} />)}\r\n        </S.FriendsList>\r\n        <FlexWrapper justify={'center'} direction={'row'}>\r\n            <S.FriendsPagination\r\n                appIsLoading={isLoading}\r\n                currentPage={currentPage}\r\n                totalUsersCount={totalUsersCount}\r\n                usersOnPage={usersOnPage}\r\n                pagesPortion={2}\r\n                pageChangeHandler={pageChangeHandler}\r\n            />\r\n        </FlexWrapper>\r\n    </S.FriendsBlock>\r\n})\r\n\r\n","import { FlexWrapper } from 'components/common/FlexWrapper.styled'\r\nimport { Input } from 'components/common/input/Input.styled'\r\nimport styled from 'styled-components'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nconst PaginationInput = styled(Input)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: ${theme.shadow.text};\r\n    color: ${theme.color.text.primary};\r\n    z-index: 999;\r\n`\r\nconst Pagination = styled(FlexWrapper)`\r\n    position: relative;\r\n    button {\r\n        min-height: 15px;\r\n        min-width: 15px;\r\n    }\r\n`\r\n\r\nexport const S = {\r\n    Pagination,\r\n    PaginationInput\r\n}","import { Button } from 'components/common/button/Button'\r\nimport { FlexWrapper } from 'components/common/FlexWrapper.styled'\r\nimport { Icon } from 'components/common/icon/Icon'\r\nimport { useFormik } from 'formik'\r\nimport { memo, useEffect, useState } from 'react'\r\nimport { S } from './Pagination_Styles'\r\n\r\ntype Props = {\r\n    className?: string\r\n    currentPage: number\r\n    usersOnPage: number\r\n    totalUsersCount: number\r\n    appIsLoading: boolean\r\n    pagesPortion: number\r\n    pageChangeHandler: (pageNumber: number) => void\r\n}\r\n\r\nexport const Pagination: React.FC<Props> = memo((props) => {\r\n    const { currentPage, usersOnPage, totalUsersCount, pagesPortion,\r\n        className, appIsLoading, pageChangeHandler } = props\r\n    const rangesCount = Math.ceil(totalUsersCount / usersOnPage)\r\n    const rangesArray = Array.from({ length: rangesCount }, (_, i) => i + 1)\r\n    const pagesRange = Math.ceil(rangesArray.length / pagesPortion)\r\n    const [currentRange, setCurrentRange] = useState(Math.ceil(currentPage / pagesPortion))\r\n    const [showInput, setShowInput] = useState(false)\r\n    const minPageIndex = currentRange * pagesPortion - pagesPortion\r\n    const maxPageIndex = currentRange * pagesPortion\r\n\r\n    useEffect(() => {\r\n        setCurrentRange(Math.ceil(currentPage / pagesPortion))\r\n    }, [currentPage])\r\n\r\n    const pagesRangeInc = () => {\r\n        if (currentRange >= pagesRange) setCurrentRange(1)\r\n        else setCurrentRange(prev => prev + 1)\r\n    }\r\n    const pagesRangeDec = () => {\r\n        if (currentRange <= 1) setCurrentRange(pagesRange)\r\n        else setCurrentRange(prev => prev - 1)\r\n    }\r\n\r\n    type FormikError = {\r\n        page?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            page: currentPage,\r\n        },\r\n        enableReinitialize: true,\r\n        onSubmit: (values) => {\r\n            pageChangeHandler(values.page)\r\n            setShowInput(false)\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikError = {}\r\n            if (!values.page) {\r\n                errors.page = 'Page required'\r\n            } else if (values.page < 1) {\r\n                errors.page = 'wrong range'\r\n            } else if (values.page > rangesCount) {\r\n                errors.page = 'wrong range'\r\n            }\r\n            return errors\r\n        },\r\n    })\r\n\r\n    const showInputHandler = () => {\r\n        setShowInput(prev => !prev)\r\n    }\r\n    const formBlurHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        formik.handleSubmit()\r\n        setShowInput(false)\r\n    }\r\n\r\n    return <S.Pagination direction={'column'} justify='center' align='center' className={className}>\r\n        <FlexWrapper justify='center'>\r\n            {rangesCount > pagesPortion &&\r\n                <Button\r\n                    className={props.className}\r\n                    ariaLabel={'Change pages range - button'}\r\n                    variant={'link'}\r\n                    disabled={props.appIsLoading}\r\n                    onClick={pagesRangeDec}\r\n                >\r\n                    <Icon\r\n                        iconId=\"leftArrow\"\r\n                        viewBox=\"-5 7 20 20\"\r\n                        height='100%'\r\n                        width='100%' />\r\n                </Button>\r\n            }\r\n            <FlexWrapper justify='center' align='center'>\r\n                {rangesArray\r\n                    .filter((el, index) => (index >= minPageIndex && index < maxPageIndex))\r\n                    .map((el, index, arr) =>\r\n                        <Button\r\n                            ariaLabel={'Go to page button'}\r\n                            key={el}\r\n                            className={props.className}\r\n                            variant={'link'}\r\n                            disabled={currentPage === el || props.appIsLoading}\r\n                            isActive={currentPage === el}\r\n                            onClick={() => { pageChangeHandler(el) }}\r\n                        >\r\n                            {index === arr.length - 1 ? el.toString() : el.toString() + ','}\r\n                        </Button>\r\n                    )\r\n                }\r\n            </FlexWrapper>\r\n            <FlexWrapper justify='center' align='center'>\r\n                {rangesCount > pagesPortion && showInput &&\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <S.PaginationInput\r\n                            type='number'\r\n                            placeholder={`1-${rangesCount}`}\r\n                            error={!!formik.errors.page && !!formik.touched.page ? 'true' : 'false'}\r\n                            name='page'\r\n                            min={'1'}\r\n                            max={rangesCount}\r\n                            value={formik.values.page}\r\n                            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                formik.handleChange(e)\r\n                            }}\r\n                            onBlur={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                formik.handleBlur(e)\r\n                                formBlurHandle(e)\r\n                            }}\r\n                            autoFocus\r\n                        />\r\n                    </form>\r\n                }\r\n                {maxPageIndex < rangesCount && <>\r\n                    <Button\r\n                        className={className}\r\n                        ariaLabel={'Show pages input button'}\r\n                        variant='link'\r\n                        onClick={showInputHandler}\r\n                    >&nbsp;...&nbsp;</Button>\r\n                    <Button\r\n                        ariaLabel={'Go to page button'}\r\n                        className={className}\r\n                        variant={'link'}\r\n                        disabled={currentPage === rangesCount || props.appIsLoading}\r\n                        isActive={currentPage === rangesCount}\r\n                        onClick={() => { pageChangeHandler(rangesCount) }}\r\n                    >{rangesCount.toString()}</Button>\r\n                </>\r\n                }\r\n            </FlexWrapper>\r\n            {rangesCount > pagesPortion &&\r\n                <Button\r\n                    className={className}\r\n                    variant={'link'}\r\n                    ariaLabel={'Change pages range + button'}\r\n                    disabled={appIsLoading}\r\n                    onClick={pagesRangeInc}\r\n                >\r\n                    <Icon\r\n                        iconId=\"rightArrow\"\r\n                        height='100%' width='100%'\r\n                        viewBox=\"15 7 20 20\"\r\n                    />\r\n                </Button>\r\n            }\r\n        </FlexWrapper>\r\n    </S.Pagination>\r\n})\r\n","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nconst ToTop = styled(Link)`\r\n    position: fixed;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid;\r\n    background-color: ${theme.color.background.primary};\r\n    height: 30px;\r\n    width: 30px;\r\n    top: 95%;\r\n    left: 95%;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n    transform: translate(-95%, -95%) rotate(90deg);\r\n    z-index: 99999;\r\n    &:hover {\r\n        box-shadow: ${theme.shadow.block};\r\n    }\r\n`\r\n\r\nexport const S = { ToTop }","import { Icon } from 'components/common/icon/Icon'\r\nimport { memo, useEffect, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { S } from './ToTop_Styles'\r\n\r\ntype Props = {\r\n    anchor_id: string\r\n}\r\n\r\nexport const ToTop: React.FC<Props> = memo(({ anchor_id }) => {\r\n    const [scrolled, setScrolled] = useState(false)\r\n    const location = useLocation()\r\n    const lastHash = useRef('')\r\n\r\n    useEffect(() => {\r\n        const main = document.querySelector('main')\r\n        const onScroll = () => {\r\n            if (main && main.scrollTop > 300) {\r\n                setScrolled(true)\r\n            }\r\n            else {\r\n                setScrolled(false)\r\n            }\r\n        }\r\n        main && main.addEventListener('scroll', onScroll)\r\n        return () => { main && main.removeEventListener('scroll', onScroll) }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (location.hash) {\r\n            lastHash.current = location.hash.slice(1)\r\n        }\r\n\r\n        if (lastHash.current && document.getElementById(lastHash.current)) {\r\n            setTimeout(() => {\r\n                document\r\n                    .getElementById(lastHash.current)\r\n                    ?.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                lastHash.current = ''\r\n            }, 100)\r\n        }\r\n    }, [location])\r\n\r\n    const onClickHandler = () => {\r\n        document.location = '#' + anchor_id\r\n    }\r\n\r\n    return scrolled ? <S.ToTop\r\n        to={'#' + anchor_id}\r\n        onClick={onClickHandler}\r\n    ><Icon iconId=\"leftArrow\" viewBox=\"-1 9 14 14\" />\r\n    </S.ToTop> : null\r\n})\r\n\r\n","import { NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { font } from 'styles/Font'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nconst User = styled(NavLink)`\r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    ${font({ weight: 300, Fmin: 10, Fmax: 16 })}\r\n    gap: 20px;\r\n    padding: 20px 0;\r\n    &::after {\r\n        position: absolute;\r\n        content: '';\r\n        width: 100%;\r\n        height: 1px;\r\n        background-color: ${theme.color.background.primary};\r\n        bottom: 0;\r\n    }\r\n    &:hover {\r\n        outline: 1px solid ${theme.color.background.primary};\r\n        background-color: ${theme.color.background.primary};\r\n        border-radius: 10px;\r\n    }\r\n`\r\nconst Info = styled.div`\r\n    width: 65%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: ${theme.color.text.primary_dark};\r\n    gap: 15px;\r\n`\r\nconst Photo = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 50% 50%;\r\n    object-fit: cover;\r\n    aspect-ratio: 1/1;\r\n    width: 54px;\r\n    justify-self: center;\r\n`\r\nconst Name = styled.p`\r\n    text-align: center;\r\n    overflow-wrap: anywhere;\r\n    ${font({ weight: 400, Fmin: 10, Fmax: 14 })}\r\n    color: ${theme.color.text.primary_dark};\r\n`\r\nconst Status = styled.p`\r\n    text-align: start;\r\n    white-space: normal;\r\n    width: 80%;\r\n    ${font({ weight: 400, Fmin: 12, Fmax: 16 })}\r\n    color: ${theme.color.text.primary_dark};\r\n`\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 30%;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nexport const S = {\r\n    User,\r\n    Info,\r\n    Photo,\r\n    Name,\r\n    Status,\r\n    Container\r\n}","import { Avatar } from 'components/common/avatar/Avatar'\r\nimport { Button } from 'components/common/button/Button'\r\nimport { memo, MouseEvent } from 'react'\r\nimport { UserState } from 'store/users/usersReducer'\r\nimport { S } from './User_Styles'\r\nimport { Patch } from 'components/app/Router/routeNames'\r\n\r\ntype Props = {\r\n    user: UserState\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User: React.FC<Props> = memo((props) => {\r\n    const { id: userId, followed, status, isLoading, name, photos } = props.user\r\n    const { follow, unfollow } = props\r\n\r\n    const followUnfollowHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        return followed ? unfollow(userId) : follow(userId)\r\n    }\r\n    return <S.User to={Patch.Profile + userId}>\r\n        <S.Info >\r\n            <S.Photo>\r\n                <Avatar avatarURL={photos.small} />\r\n                <S.Name>{name + ' '}</S.Name>\r\n            </S.Photo>\r\n            {status ? <S.Status>{status + ' '}</S.Status> : <S.Status></S.Status>}\r\n        </S.Info>\r\n        <S.Container>\r\n            <Button\r\n                ariaLabel={`${followed ? 'Unfollow' : 'Follow'} button`}\r\n                variant={followed ? 'primary' : 'outlined'}\r\n                onClick={followUnfollowHandler}\r\n                disabled={isLoading}\r\n            >{followed ? 'UNFOLLOW' : 'FOLLOW'}</Button>\r\n        </S.Container>\r\n    </S.User>\r\n})","import { AppRootState } from 'store/redux-store'\r\nimport { UsersState } from './usersReducer'\r\n\r\nexport const selectUsersData = (state: AppRootState): UsersState => state.users\r\nexport const selectUsersSearchTerm = (state: AppRootState): string => state.users.searchTerm ","import { BlockSection } from 'components/blocks/BlockSection.styled'\r\nimport { Pagination } from 'components/common/pagination/Pagination'\r\nimport styled from 'styled-components'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nconst UsersBlock = styled(BlockSection)`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 132vh;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    padding-bottom: 65px;\r\n    @media ${theme.media.mobile} {\r\n        width: 100%;\r\n    }\r\n`\r\nconst UsersPagination = styled(Pagination)`\r\n    height: 1em;\r\n`\r\nexport const S = {\r\n    UsersBlock,\r\n    UsersPagination\r\n}","import { BlockHeader } from 'components/blocks/BlockHeader.styled'\r\nimport { User } from 'components/blocks/usersBlock/user/User'\r\nimport { FlexWrapper } from 'components/common/FlexWrapper.styled'\r\nimport { Button } from 'components/common/button/Button'\r\nimport { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAppIsLoading } from 'store/app/appSelectors'\r\nimport { selectUsersData } from 'store/users/usersSelectors'\r\nimport { useActions } from 'utils/customHooks/useActions'\r\nimport { S } from './UsersBlock_Styles'\r\n\r\nexport const UsersBlock: React.FC = memo(() => {\r\n    const usersData = useSelector(selectUsersData)\r\n    const { usersFilter, usersOnPage, searchTerm, currentPage, totalUsersCount } = usersData\r\n    const appIsLoading = useSelector(selectAppIsLoading)\r\n    const {getUsers, changeUsersFilter, followUser, unfollowUser} = useActions()\r\n\r\n    useEffect(() => {\r\n        switch (usersFilter) {\r\n            case \"all\":\r\n                getUsers(1, usersOnPage, null, searchTerm)\r\n                break\r\n            case \"followed\":\r\n                getUsers(1, usersOnPage, true, searchTerm)\r\n                break\r\n            case \"unfollowed\":\r\n                getUsers(1, usersOnPage, false, searchTerm)\r\n                break\r\n            default:\r\n                getUsers(1, usersOnPage, null, searchTerm)\r\n        }\r\n    }, [usersFilter, searchTerm])\r\n\r\n    const pageChangeHandler = (pageNumber: number) => {\r\n        switch (usersFilter) {\r\n            case \"all\":\r\n                getUsers(pageNumber, usersOnPage, null, searchTerm)\r\n                break\r\n            case \"followed\":\r\n                getUsers(pageNumber, usersOnPage, true, searchTerm)\r\n                break\r\n            case \"unfollowed\":\r\n                getUsers(pageNumber, usersOnPage, false, searchTerm)\r\n                break\r\n            default:\r\n                getUsers(pageNumber, usersOnPage, null, searchTerm)\r\n        }\r\n    }\r\n    const usersList = () => {\r\n        return <>\r\n            {usersData.users.map(user =>\r\n                <User\r\n                    key={user.id}\r\n                    user={user}\r\n                    follow={followUser}\r\n                    unfollow={unfollowUser}\r\n                />\r\n            )}\r\n        </>\r\n    }\r\n\r\n    return <S.UsersBlock >\r\n        <BlockHeader id=\"users-block\">Users</BlockHeader>\r\n        <FlexWrapper justify=\"center\" gap=\"20px\">\r\n            <Button\r\n                ariaLabel={'All filter button'}\r\n                variant={'link'}\r\n                isActive={usersFilter === 'all'}\r\n                disabled={appIsLoading}\r\n                onClick={() => changeUsersFilter(\"all\")}\r\n            >{'All'}</Button>\r\n            <Button\r\n                ariaLabel={'Followed filter button'}\r\n                variant={'link'}\r\n                isActive={usersFilter === 'followed'}\r\n                disabled={appIsLoading}\r\n                onClick={() => changeUsersFilter(\"followed\")}\r\n            >{'Followed'}</Button>\r\n            <Button\r\n                ariaLabel={'Unfollowed filter button'}\r\n                variant={'link'}\r\n                isActive={usersFilter === 'unfollowed'}\r\n                disabled={appIsLoading}\r\n                onClick={() => changeUsersFilter(\"unfollowed\")}\r\n            >{'Unfollowed'}</Button>\r\n        </FlexWrapper>\r\n        {usersList()}\r\n        <S.UsersPagination\r\n            pagesPortion={7}\r\n            usersOnPage={usersOnPage}\r\n            currentPage={currentPage}\r\n            appIsLoading={appIsLoading}\r\n            totalUsersCount={totalUsersCount}\r\n            pageChangeHandler={pageChangeHandler}\r\n        />\r\n    </S.UsersBlock>\r\n})","import styled from 'styled-components'\r\nimport { theme } from 'styles/Theme.styled'\r\n\r\nconst Users = styled.main`\r\n    display: flex;\r\n    flex: 1;\r\n    justify-content: space-between;\r\n    @media ${theme.media.mobile} {\r\n        flex-wrap: wrap;\r\n    }\r\n`\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction : column;\r\n    gap: min(30px, 2vw);\r\n    min-width: 170px;\r\n    max-width: 20%;\r\n    @media ${theme.media.mobile} {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const S = {\r\n    Users,\r\n    Wrapper\r\n}","import { FriendsBlock } from 'components/blocks/friendsBlock/FriendsBlock'\r\nimport { UsersBlock } from 'components/blocks/usersBlock/UsersBlock'\r\nimport { ToTop } from 'components/common/toTop/ToTop'\r\nimport React, { memo } from \"react\"\r\nimport { S } from './Users_Styles'\r\n\r\nconst Users: React.FC = memo(() => {\r\n    return <S.Users id=\"users\">\r\n        <ToTop anchor_id='users-block' />\r\n        <UsersBlock />\r\n        <S.Wrapper>\r\n            <FriendsBlock headerName='Friends' />\r\n            <FriendsBlock headerName='Might know' isFriends={false} />\r\n        </S.Wrapper>\r\n    </S.Users>\r\n})\r\n\r\nexport default Users"],"names":["BlockHeader","styled","_templateObject","_taggedTemplateLiteral","theme","font","weight","Fmin","Fmax","BlockSection","S","Friend","NavLink","Photo","Avatar","_templateObject2","Name","_templateObject3","memo","props","_jsxs","to","Patch","friendData","id","children","_jsx","avatarURL","photos","small","name","FriendsBlock","FriendsList","FriendsPagination","Pagination","selectPossibleFriendsData","state","friends","possibleFriends","selectFriendsData","_ref","headerName","blockHeaderName","className","isFriends","getFriends","useActions","totalUsersCount","currentPage","usersOnPage","users","useSelector","isLoading","selectAppIsLoading","randomPage","min","max","minCeiled","Math","ceil","maxFloored","floor","random","getRandomPage","useEffect","toLowerCase","replaceAll","FlexWrapper","justify","Button","onClick","randomizeFriends","variant","ariaLabel","map","friend","direction","appIsLoading","pagesPortion","pageChangeHandler","pageNumber","PaginationInput","Input","rangesCount","rangesArray","Array","from","length","_","i","pagesRange","currentRange","setCurrentRange","useState","showInput","setShowInput","minPageIndex","maxPageIndex","formik","useFormik","initialValues","page","enableReinitialize","onSubmit","values","validate","errors","align","disabled","pagesRangeDec","prev","Icon","iconId","viewBox","height","width","filter","el","index","arr","isActive","toString","handleSubmit","type","placeholder","concat","error","touched","value","onChange","e","handleChange","onBlur","handleBlur","autoFocus","_Fragment","showInputHandler","pagesRangeInc","ToTop","Link","anchor_id","scrolled","setScrolled","location","useLocation","lastHash","useRef","main","document","querySelector","onScroll","scrollTop","addEventListener","removeEventListener","hash","current","slice","getElementById","setTimeout","_document$getElementB","scrollIntoView","behavior","block","onClickHandler","User","Info","_templateObject4","Status","_templateObject5","Container","_templateObject6","userId","followed","status","user","follow","unfollow","preventDefault","selectUsersData","UsersBlock","UsersPagination","usersData","usersFilter","searchTerm","getUsers","changeUsersFilter","followUser","unfollowUser","gap","Users","Wrapper"],"sourceRoot":""}